package caccResoluteLibrary
public
		annex Resolute{** 
				print_aadl(a:aadl)<=
				**a** 
				true	
				print_set(s:{aadl})<=
				**s**
				true
		
		SystemWideReq1() <= ** "All threads have a period" ** 
 				forall (t: thread). HasPeriod(t)
 
 		HasPeriod(t : thread) <= ** "Thread " t " has a period" ** 
 				has_property(t,Timing_Properties::Period)
		
		AllHaveWeightBudgets(self : component) <= ** "Component " self " shall have a weight budget" ** 
 				HasWeightBudget(self) and forall (c: subcomponents(self)). AllHaveWeightBudgets(c) 
		
 
 		HasWeightBudget(t : component) : bool =  
 				not(has_property(t,SEI::GrossWeight)) => fail ** t " has no weight" ** 
		
		
		SystemWideReq2() <= ** "All buses have a power capacity" ** 
 				forall (t: bus).HasPowerCapacity(t)
 
 		HasPowerCapacity(t : bus) <= ** "Bus " t " has a power capacity" ** 
 				has_property(t,SEI::PowerCapacity)
		
		SystemWideReq3() <= ** "All sensors have a power budget" ** 
 				forall (t: component).HasPowerBudget(t)
 
 		HasPowerBudget(t : component) <= ** "Sensor " t " has a power budget" ** 
 				--is_of_type(t, sensor::generic_sensor) and has_property(t,SEI::PowerBudget)
		has_property(t,SEI::PowerBudget)
		
		
			**};
end caccResoluteLibrary;